services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest  # Use the latest tag
    platform: linux/arm64  # Specify ARM64 or AMD64 here
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_datalog:/var/lib/zookeeper/datalog
    networks:
      - kafka_network

  kafka:
    image: confluentinc/cp-kafka:latest  # Use the latest tag
    platform: linux/arm64  # Specify ARM64 or AMD64 here
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_INTERNAL: INSIDE://0.0.0.0:9093  # Internal listener for Kafka container
      KAFKA_LISTENER_INTERNAL_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_EXTERNAL: INSIDE://0.0.0.0:9093
      KAFKA_LISTENER_INTERBIND: INSIDE://0.0.0.0:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - kafka_network

  producer:
    build: .
    platform: linux/arm64  # Specify ARM64 or AMD64 here
    command: python producer.py
    depends_on:
      - kafka
    volumes:
      - producer_data:/app  # Using a named volume for persistent storage (no relative path)
    networks:
      - kafka_network

  consumer_payroll:
    build: .
    platform: linux/arm64  # Specify ARM64 or AMD64 here
    command: python consumer_payroll.py
    depends_on:
      - kafka
    volumes:
      - consumer_data:/app  # Using a named volume for persistent storage (no relative path)
    networks:
      - kafka_network

  consumer_security:
    build: .
    platform: linux/arm64  # Specify ARM64 or AMD64 here
    command: python consumer_security.py
    depends_on:
      - kafka
    volumes:
      - consumer_data:/app  # Using a named volume for persistent storage (no relative path)
    networks:
      - kafka_network

# Named Volumes for persistent storage
volumes:
  zookeeper_data:
  zookeeper_datalog:
  kafka_data:
  producer_data:  # Added named volume for producer
  consumer_data:  # Added named volume for consumer

# Define networks
networks:
  kafka_network:
    driver: bridge
