version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    networks:
      - my-network
    ports:
      - "5672:5672"       # AMQP protocol
      - "15672:15672"     # Management UI (for monitoring)
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
      - RABBITMQ_DEFAULT_VHOST=/
      - RABBITMQ_LISTENER_TCP_BACKLOG=128  # Increase connection limit
      - RABBITMQ_NODENAME=rabbit@rabbitmq
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-setcookie secret_cookie
    volumes:
      - rabbitmq-logs:/var/lib/rabbitmq
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./.erlang.cookie:/var/lib/rabbitmq/.erlang.cookie

    user: root
    healthcheck: 
      test: ["CMD", "nc", "-z", "localhost", "5672"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'

  sender:
    build:
      context: .
      dockerfile: producer/Dockerfile
    container_name: producer
    depends_on:
      rabbitmq:
        condition: service_healthy  # Wait for RabbitMQ to be ready
    networks:
      - my-network
    ports:
      - "6000:5000"  # Flask app exposed on port 6000
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=password
    volumes:
      - sender-app:/app
    restart: always

  finance_consumer:
    build:
      context: .
      dockerfile: consumers/Finance/Dockerfile
    container_name: finance_consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - my-network
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=password
      - QUEUE_NAME=finance_queue  # Finance queue binding
    volumes:
      - finance-app:/app
    restart: always

  hr_consumer:
    build:
      context: .
      dockerfile: consumers/Hr/Dockerfile
    container_name: hr_consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - my-network
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=password
      - QUEUE_NAME=hr_queue  # HR queue binding
    volumes:
      - hr-app:/app
    restart: always

networks:
  my-network:
    driver: bridge

volumes:
  rabbitmq-logs:
  sender-app:
  finance-app:
  hr-app:
